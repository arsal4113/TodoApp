{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\todo-app-client\\\\src\\\\components\\\\Header\\\\Header.js\";\nimport React, { Component } from \"react\";\nimport { Toolbar, Typography, AppBar, Button } from \"@material-ui/core\";\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.todoLogout = () => {\n      let token = sessionStorage.getItem(\"token\");\n      var myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", `Bearer ${token}`);\n      var requestOptions = {\n        method: \"GET\",\n        headers: myHeaders\n      };\n      fetch(\"http://127.0.0.1:8000/api/user/logout\", requestOptions).then(response => response.json()).then(result => {\n        if (result.status === \"success\") {\n          window.location.reload();\n          sessionStorage.clear();\n          let temp = window.location.origin;\n          window.location.href = temp + \"/login\";\n        }\n      }).catch(error => console.log(\"error\", error));\n    };\n\n    this.state = {\n      isLoggedIn: null\n    };\n  }\n\n  componentDidMount() {\n    let isLoggedIn = sessionStorage.getItem(\"isLoggedIn\");\n    this.setState({\n      isLoggedIn: isLoggedIn\n    });\n  }\n\n  render() {\n    const {\n      isLoggedIn\n    } = this.state;\n    let logoutDiv = null;\n\n    if (isLoggedIn === \"true\") {\n      logoutDiv = /*#__PURE__*/React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          color: \"black\",\n          backgroundColor: \"#7d4cf1\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Toolbar, {\n        style: {\n          display: \" flex\",\n          justifyContent: \"space-between\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, \"Todo App\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.todoLogout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"Logout\")));\n    }\n\n    if (isLoggedIn === null) {\n      logoutDiv = /*#__PURE__*/React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          color: \"black\",\n          backgroundColor: \"#7d4cf1\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Toolbar, {\n        style: {\n          display: \" flex\",\n          justifyContent: \"space-between\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, \"Todo App\")));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    }, logoutDiv);\n  }\n\n}","map":{"version":3,"sources":["C:/wamp64/www/todo-app-client/src/components/Header/Header.js"],"names":["React","Component","Toolbar","Typography","AppBar","Button","Header","constructor","props","todoLogout","token","sessionStorage","getItem","myHeaders","Headers","append","requestOptions","method","headers","fetch","then","response","json","result","status","window","location","reload","clear","temp","origin","href","catch","error","console","log","state","isLoggedIn","componentDidMount","setState","render","logoutDiv","color","backgroundColor","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Toolbar, Typography, AppBar, Button } from \"@material-ui/core\";\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: null,\n    };\n  }\n\n  todoLogout = () => {\n    let token = sessionStorage.getItem(\"token\");\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", `Bearer ${token}`);\n\n    var requestOptions = {\n      method: \"GET\",\n      headers: myHeaders,\n    };\n\n    fetch(\"http://127.0.0.1:8000/api/user/logout\", requestOptions)\n      .then((response) => response.json())\n      .then((result) => {\n        if (result.status === \"success\") {\n          window.location.reload();\n          sessionStorage.clear();\n          let temp = window.location.origin;\n          window.location.href = temp + \"/login\";\n        }\n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n  componentDidMount() {\n    let isLoggedIn = sessionStorage.getItem(\"isLoggedIn\");\n    this.setState({ isLoggedIn: isLoggedIn });\n  }\n  render() {\n    const { isLoggedIn } = this.state;\n    let logoutDiv = null;\n    if (isLoggedIn === \"true\") {\n      logoutDiv = (\n        <AppBar\n          position=\"static\"\n          style={{ color: \"black\", backgroundColor: \"#7d4cf1\" }}\n        >\n          <Toolbar\n            style={{ display: \" flex\", justifyContent: \"space-between\" }}\n          >\n            <Typography variant=\"h6\">Todo App</Typography>\n            <Button onClick={this.todoLogout}>Logout</Button>\n          </Toolbar>\n        </AppBar>\n      );\n    }\n\n    if (isLoggedIn === null) {\n      logoutDiv = (\n        <AppBar\n          position=\"static\"\n          style={{ color: \"black\", backgroundColor: \"#7d4cf1\" }}\n        >\n          <Toolbar\n            style={{ display: \" flex\", justifyContent: \"space-between\" }}\n          >\n            <Typography variant=\"h6\">Todo App</Typography>\n          </Toolbar>\n        </AppBar>\n      );\n    }\n\n    return <div>{logoutDiv}</div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}