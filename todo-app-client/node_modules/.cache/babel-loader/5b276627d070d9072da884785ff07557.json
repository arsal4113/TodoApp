{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\todo-app-client\\\\src\\\\components\\\\InputItem\\\\InputItem.js\";\nimport React, { Component, useState } from \"react\";\nimport { Button, Container } from \"reactstrap\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Redirect } from \"react-router-dom\";\nimport TodoList from \"../TodoList/TodoList\";\nimport \"./style.css\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport EditTodo from \"../EditTodo/EditTodo\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#F2AA4CFF\"\n    }\n  }\n});\nexport default class InputItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addItem = () => {\n      let token = sessionStorage.getItem(\"token\");\n      var formdata = new FormData();\n      formdata.append(\"title\", this.state.taskData.title);\n      formdata.append(\"description\", this.state.taskData.description);\n      var requestOptions = {\n        method: \"POST\",\n        body: formdata,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      fetch(\"http://127.0.0.1:8000/api/user/todos\", requestOptions).then(response => response.json()).then(result => {\n        if (result.status === \"success\") {\n          this.setState({\n            successAlertMsg: result.message\n          }, () => this.getTaskData());\n          setTimeout(() => {\n            this.setState({\n              successAlertMsg: \"\"\n            });\n          }, 1000);\n        }\n\n        if (result.error === false) {\n          this.setState({\n            taskData: {\n              title: \"\",\n              description: \"\"\n            }\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.onChangehandler = e => {\n      const {\n        taskData\n      } = this.state;\n      taskData[e.target.name] = e.target.value;\n      console.log(taskData[e.target.name] = e.target.value);\n      this.setState({\n        taskData\n      });\n    };\n\n    this.clearList = () => {\n      this.setState({\n        showTaskData: []\n      });\n    };\n\n    this.handleDelete = id => {\n      let token = sessionStorage.getItem(\"token\");\n      var requestOptions = {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      fetch(\"http://127.0.0.1:8000/api/user/todos/\" + id, requestOptions).then(response => response.json()).then(result => {\n        if (result.status === \"success\") {\n          this.setState({\n            todoDeleteMsg: result.message\n          }, () => this.getTaskData());\n          setTimeout(() => {\n            this.setState({\n              todoDeleteMsg: \"\"\n            });\n          }, 1000);\n        }\n      });\n    };\n\n    this.toggleEditTaskModal = () => {\n      this.setState({\n        editTaskDataModal: !this.state.editTaskDataModal\n      });\n    };\n\n    this.onChangeEditTodoHandler = e => {\n      let {\n        editTaskData\n      } = this.state;\n      editTaskData[e.target.name] = e.target.value;\n      this.setState({\n        editTaskData\n      });\n    };\n\n    this.editTodo = (id, title, description, completed) => {\n      this.setState({\n        editTaskData: {\n          id,\n          title,\n          description,\n          completed\n        },\n        editTaskDataModal: !this.state.editTaskDataModal\n      });\n    };\n\n    this.updateTodo = () => {\n      let {\n        id,\n        title,\n        description,\n        completed\n      } = this.state.editTaskData;\n      let token = sessionStorage.getItem(\"token\");\n      var myHeaders = new Headers();\n      const [marked, setmarked] = useState(null);\n      myHeaders.append(\"Authorization\", `Bearer ${token}`);\n      myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      var urlencoded = new URLSearchParams();\n      urlencoded.append(\"title\", title);\n      urlencoded.append(\"description\", description);\n      urlencoded.append(\"completed\", completed);\n      var requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        body: urlencoded\n      };\n      fetch(\"http://127.0.0.1:8000/api/user/todos/\" + id, requestOptions).then(response => response.json()).then(result => {\n        if (result.status === \"success\") {\n          this.setState({\n            editTaskDataModal: false,\n            editTaskData: {\n              title,\n              description,\n              completed\n            }\n          }, () => this.getTaskData());\n          setTimeout(() => {\n            this.setState({\n              editTaskDataModal: false\n            });\n          }, 1000);\n        }\n\n        if (result.errors === false) {\n          this.setState({\n            successTodoUpdatedMsg: result.message\n          });\n        }\n      }).catch(error => console.log(\"error\", error));\n    };\n\n    this.state = {\n      taskData: {\n        title: \"\",\n        description: \"\",\n        status: \"\"\n      },\n      showTaskData: [],\n      successAlertMsg: \"\",\n      todoDeleteMsg: \"\",\n      editTaskDataModal: false,\n      editTaskData: {\n        title: \"\",\n        description: \"\",\n        completed: \"\"\n      },\n      successTodoUpdatedMsg: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getTaskData();\n  }\n\n  getTaskData() {\n    let token = sessionStorage.getItem(\"token\");\n    var requestOptions = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    fetch(\"http://127.0.0.1:8000/api/user/todos\", requestOptions).then(response => response.json()).then(result => {\n      if (result.status === \"success\") {\n        this.setState({\n          showTaskData: result.data\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description\n    } = this.state.taskData;\n\n    if (this.state.isLoggedIn === false) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/log-in\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"themed-container mt-5\",\n      fluid: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Task Title\",\n      value: title,\n      onChange: this.onChangehandler,\n      color: \"primary\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"description\",\n      placeholder: \"Task description\",\n      value: description,\n      onChange: this.onChangehandler,\n      color: \"primary\",\n      variant: \"outlined\",\n      style: {\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      className: \"font-weight-bold add-task\",\n      onClick: this.addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, \"+\"))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"text-success p-4 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }, this.state.successAlertMsg), /*#__PURE__*/React.createElement(TodoList, {\n      showTaskData: this.state.showTaskData,\n      clearList: this.clearList,\n      handleDelete: this.handleDelete,\n      todoDeleteMsg: this.state.todoDeleteMsg,\n      editTodo: this.editTodo,\n      toggleEditTaskModal: this.toggleEditTaskModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(EditTodo, {\n      toggleEditTaskModal: this.toggleEditTaskModal,\n      editTaskDataModal: this.state.editTaskDataModal,\n      onChangeEditTodoHandler: this.onChangeEditTodoHandler,\n      editTodo: this.editTodo,\n      editTaskData: this.state.editTaskData,\n      updateTodo: this.updateTodo,\n      successTodoUpdatedMsg: this.state.successTodoUpdatedMsg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/wamp64/www/todo-app-client/src/components/InputItem/InputItem.js"],"names":["React","Component","useState","Button","Container","TextField","Redirect","TodoList","ThemeProvider","createMuiTheme","EditTodo","theme","palette","primary","main","InputItem","constructor","props","addItem","token","sessionStorage","getItem","formdata","FormData","append","state","taskData","title","description","requestOptions","method","body","headers","Authorization","fetch","then","response","json","result","status","setState","successAlertMsg","message","getTaskData","setTimeout","error","catch","console","log","onChangehandler","e","target","name","value","clearList","showTaskData","handleDelete","id","todoDeleteMsg","toggleEditTaskModal","editTaskDataModal","onChangeEditTodoHandler","editTaskData","editTodo","completed","updateTodo","myHeaders","Headers","marked","setmarked","urlencoded","URLSearchParams","errors","successTodoUpdatedMsg","componentDidMount","data","render","isLoggedIn","width"],"mappings":"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","sourcesContent":["import React, {Component, useState} from \"react\";\nimport { Button, Container } from \"reactstrap\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Redirect } from \"react-router-dom\";\nimport TodoList from \"../TodoList/TodoList\";\nimport \"./style.css\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport EditTodo from \"../EditTodo/EditTodo\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#F2AA4CFF\",\n    },\n  },\n});\n\nexport default class InputItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskData: {\n        title: \"\",\n        description: \"\",\n        status: \"\",\n      },\n      showTaskData: [],\n      successAlertMsg: \"\",\n      todoDeleteMsg: \"\",\n      editTaskDataModal: false,\n      editTaskData: {\n        title: \"\",\n        description: \"\",\n        completed:\"\",\n      },\n      successTodoUpdatedMsg: \"\",\n    };\n  }\n  componentDidMount() {\n    this.getTaskData();\n  }\n\n  addItem = () => {\n    let token = sessionStorage.getItem(\"token\");\n    var formdata = new FormData();\n    formdata.append(\"title\", this.state.taskData.title);\n    formdata.append(\"description\", this.state.taskData.description);\n    var requestOptions = {\n      method: \"POST\",\n      body: formdata,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    fetch(\"http://127.0.0.1:8000/api/user/todos\", requestOptions)\n      .then((response) => response.json())\n      .then((result) => {\n        if (result.status === \"success\") {\n          this.setState({ successAlertMsg: result.message }, () =>\n            this.getTaskData()\n          );\n          setTimeout(() => {\n            this.setState({ successAlertMsg: \"\" });\n          }, 1000);\n        }\n        if (result.error === false) {\n          this.setState({\n            taskData: {\n              title: \"\",\n              description: \"\",\n            },\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  getTaskData() {\n    let token = sessionStorage.getItem(\"token\");\n    var requestOptions = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    fetch(\"http://127.0.0.1:8000/api/user/todos\", requestOptions)\n      .then((response) => response.json())\n      .then((result) => {\n        if (result.status === \"success\") {\n          this.setState({\n            showTaskData: result.data,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  onChangehandler = (e) => {\n    const { taskData } = this.state;\n    taskData[e.target.name] = e.target.value;\n    console.log((taskData[e.target.name] = e.target.value));\n    this.setState({ taskData });\n  };\n  clearList = () => {\n    this.setState({\n      showTaskData: [],\n    });\n  };\n  handleDelete = (id) => {\n    let token = sessionStorage.getItem(\"token\");\n    var requestOptions = {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    fetch(\n      \"http://127.0.0.1:8000/api/user/todos/\" + id,\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        if (result.status === \"success\") {\n          this.setState(\n            {\n              todoDeleteMsg: result.message,\n            },\n            () => this.getTaskData()\n          );\n          setTimeout(() => {\n            this.setState({ todoDeleteMsg: \"\" });\n          }, 1000);\n        }\n      });\n  };\n  toggleEditTaskModal = () => {\n    this.setState({\n      editTaskDataModal: !this.state.editTaskDataModal,\n    });\n  };\n  onChangeEditTodoHandler = (e) => {\n    let { editTaskData } = this.state;\n    editTaskData[e.target.name] = e.target.value;\n    this.setState({ editTaskData });\n  };\n\n  editTodo = (id, title, description,completed) => {\n    this.setState({\n      editTaskData: { id, title, description, completed },\n      editTaskDataModal: !this.state.editTaskDataModal,\n    });\n  };\n\n  updateTodo = () => {\n    let { id, title, description, completed } = this.state.editTaskData;\n    let token = sessionStorage.getItem(\"token\");\n    var myHeaders = new Headers();\n    const [marked,setmarked] = useState(null);\n    myHeaders.append(\"Authorization\", `Bearer ${token}`);\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n    var urlencoded = new URLSearchParams();\n    urlencoded.append(\"title\", title);\n    urlencoded.append(\"description\", description);\n    urlencoded.append(\"completed\", completed);\n\n    var requestOptions = {\n      method: \"PUT\",\n      headers: myHeaders,\n      body: urlencoded\n    };\n\n    fetch(\n      \"http://127.0.0.1:8000/api/user/todos/\" + id,\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        if (result.status === \"success\") {\n          this.setState( {\n              editTaskDataModal: false,\n              editTaskData: { title, description, completed }\n            },\n            () => this.getTaskData()\n          );\n          setTimeout(() => {\n            this.setState({ editTaskDataModal: false });\n          }, 1000);\n        }\n        if (result.errors === false) {\n          this.setState({\n            successTodoUpdatedMsg: result.message,\n          });\n        }\n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n  render() {\n    const { title, description } = this.state.taskData;\n    if (this.state.isLoggedIn === false) {\n      return <Redirect to=\"/log-in\" />;\n    }\n    return (\n      <Container className=\"themed-container mt-5\" fluid=\"sm\">\n        <div className=\"input-field-container\">\n          <ThemeProvider theme={theme}>\n            <TextField\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Task Title\"\n              value={title}\n              onChange={this.onChangehandler}\n              color=\"primary\"\n              variant=\"outlined\"\n            />\n            <TextField\n              type=\"text\"\n              name=\"description\"\n              placeholder=\"Task description\"\n              value={description}\n              onChange={this.onChangehandler}\n              color=\"primary\"\n              variant=\"outlined\"\n              style={{ width: \"50%\" }}\n            />\n\n            <Button\n              color=\"success\"\n              className=\"font-weight-bold add-task\"\n              onClick={this.addItem}\n            >\n              +\n            </Button>\n          </ThemeProvider>\n        </div>\n        <div class=\"text-success p-4 mt-2\">{this.state.successAlertMsg}</div>\n        {/*TODO list  */}\n        <TodoList\n          showTaskData={this.state.showTaskData}\n          clearList={this.clearList}\n          handleDelete={this.handleDelete}\n          todoDeleteMsg={this.state.todoDeleteMsg}\n          editTodo={this.editTodo}\n          toggleEditTaskModal={this.toggleEditTaskModal}\n        />\n        {/* Model for Edit Todo */}\n        <EditTodo\n          toggleEditTaskModal={this.toggleEditTaskModal}\n          editTaskDataModal={this.state.editTaskDataModal}\n          onChangeEditTodoHandler={this.onChangeEditTodoHandler}\n          editTodo={this.editTodo}\n          editTaskData={this.state.editTaskData}\n          updateTodo={this.updateTodo}\n          successTodoUpdatedMsg={this.state.successTodoUpdatedMsg}\n        />\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}